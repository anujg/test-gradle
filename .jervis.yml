#######################
# Aurea Central Jervis Example
#######################
# User guide and documentation can be found at: https://github.com/trilogy-group/aurea-central-jervis-example
# This project is based on https://github.com/aurea-central-jervis-example/aurea-central-jervis

language: shell
jervis_version: fix-for-repo-checkout
variables:
  - CENTRAL_JERVIS_BRANCH=feature/CFOT-303
  - INTEGRATION_TEST_LABEL='stable && docker && ubuntu1604 && sudo && language-shell && env && aes-edi-java-rocker'

repos:
  - repo_id: aurea-aes-edi
    repo_org_and_project: trilogy-group/aurea-aes-edi
    branch: develop
    checkout_at: repository/aes-edi
  - repo_id: aurea-aes-edi-docker
    repo_org_and_project: trilogy-group/aurea-eng-docker-aes-edi
    branch: jervis-test
    checkout_at: /tmp

branches:
  only:
    - develop

docker-k8s-agents:
  - template-name: aes-edi
    docker-image: registry2.swarm.devfactory.com/aurea/teamcity-linux/aes-edi-java8-maven-security-rocker:latest
    labels: aes-edi-java-rocker
    remote-home-dir: /root

#trigger_cron_branch:
#  - develop
#  - release
#trigger_cron_expression: 'H/2 * * * *'

script:
  - echo 'Trying dev script'
  - echo "Before"
  - if [ ! -z "$SECRET1" ]; then echo "Got correct secret!"; fi
  - echo "After"

#jenkins:
#  additional_labels: aes-edi-java-rocker
#  secrets:
#    SECRET1: MY_SECRET_1
#    SECRET2: SECRET2
#  pipeline_jenkinsfile: aurea-central-jervis/pipelines/SaaSMultiStage
#
#services:
#  test-service:
#    integration-test:
#      - name: "Simulating {{ step_name }}"
#        debug: msg="Hello world from {{ step_name }}"


notifications:
  email:
    recipients:
      - to: anuj.gupta@aurea.com
        on_success: always
        on_failure: always
